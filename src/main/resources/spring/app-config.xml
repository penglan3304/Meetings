<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${c3p0.master1.driverClass}"/>
        <property name="jdbcUrl" value="${c3p0.master1.jdbcUrl}"/>
        <property name="user" value="${c3p0.master1.username}"/>
        <property name="password" value="${c3p0.master1.password}"/>
        <property name="initialPoolSize" value="${c3p0.master1.initialPoolSize}"/>
        <property name="minPoolSize" value="${c3p0.master1.minPoolSize}"/>
        <property name="maxPoolSize" value="${c3p0.master1.maxPoolSize}"/>
        <property name="acquireIncrement" value="${c3p0.master1.acquireIncrement}"/>
        <property name="maxIdleTime" value="${c3p0.master1.maxIdleTime}"/>
        <property name="maxStatements" value="${c3p0.master1.maxStatements}"/>
        <property name="testConnectionOnCheckin" value="${c3p0.testConnectionOnCheckin}"/>
        <property name="testConnectionOnCheckout" value="${c3p0.testConnectionOnCheckout}"/>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 一般对应实体类所在的包 -->
        <property name="typeAliasesPackage" value="com.meeting.pojo"/>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.meeting.mapper"/>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"
          scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <!-- 定义Spring注解的事务驱动以及组件扫描 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--   <context:component-scan base-package="com.meeting">
        <context:exclude-filter type="regex"
            expression="com\.meeting\.controller.*" />
    </context:component-scan>         -->

    <context:component-scan base-package="com.meeting">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <context:annotation-config/>


    <!--邮件配置-->
    <context:property-placeholder location="classpath:mail.properties" ignore-unresolvable="true"/>
    <bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.from}"></property>
    </bean>
    <!--配置邮件接口-->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="host" value="${mail.host}"/>
        <property name="username" value="${mail.username}"/>
        <property name="password" value="${mail.password}"/>
        <property name="javaMailProperties">
            <props>
                <!-- 设置认证开关 -->
                <prop key="mail.smtp.auth">false</prop>
                <!-- 启动调试开关 -->
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.ssl.enable">true</prop>
                <!-- 设置发送延时 -->

            </props>
        </property>
    </bean>

    <!--注入RedisDao-->
    <bean id="redisDao" class="com.meeting.cache.RedisDao">
        <constructor-arg index="0" value="6379"/>
        <constructor-arg index="1" value="47.100.202.75"/>
    </bean>
</beans>